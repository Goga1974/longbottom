
    /*
    public static String convertToJson(List<PriceEntry> priceEntries)
    {
        Gson gson = new GsonBuilder()
                .excludeFieldsWithoutExposeAnnotation()
                .create();
        return gson.toJson(priceEntries);
    }
     */
	 
	 
    @PostMapping("/create")
    public ResponseEntity<String> createUser(@RequestBody CreateRequest request)
    {
        Optional<User> existingUser = dataRepository.findById(request.getUserId());
        if (existingUser.isEmpty())
        {
            User user = new User();
            user.setUserId(request.getUserId());
            user.setUserName(request.getUserName());
            user.setData(JsonUtil.convertToJson(request.getItems()));
            dataRepository.save(user);
            return ResponseEntity.ok("User created successfully");
        }
        return ResponseEntity.status(HttpStatus.CONFLICT).body("User already exists");
    }

    @PostMapping("/login")
    public ResponseEntity<CommonResponse> loginUser(@RequestBody LoginRequest request)
    {
        Optional<User> userOptional = dataRepository.findById(request.getUserId());
        if (userOptional.isPresent())
        {
            User user = userOptional.get();
            List<ItemEntity> items = JsonUtil.convertFromJson(user.getData(), List.class);
            CommonResponse response = new CommonResponse();
            response.setUserId(user.getUserId());
            response.setUserName(user.getUserName());
            response.setItems(items);
            return ResponseEntity.ok(response);
        }
        return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
    }

package com.goga74.platform.DB.entity;

import jakarta.persistence.*;
import java.time.LocalDate;

@Entity
@Table(name = "price_data")
public class PriceData {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false, unique = true)
    private LocalDate date; // Колонка для хранения даты

    @Column(columnDefinition = "JSON", nullable = false)
    private String jsonData;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public LocalDate getDate() {
        return date;
    }

    public void setDate(LocalDate date) {
        this.date = date;
    }

    public String getJsonData() {
        return jsonData;
    }

    public void setJsonData(String jsonData) {
        this.jsonData = jsonData;
    }
}



	